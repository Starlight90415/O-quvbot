import logging
import os
from flask import Flask, request, jsonify
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, ConversationHandler, filters
from attendance_bot import setup_handlers
from config import TELEGRAM_TOKEN

# Configure logging
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# Create Flask app
app = Flask(__name__)

# Create Telegram application
bot_app = Application.builder().token(TELEGRAM_TOKEN).build()

# Set up bot handlers
setup_handlers(bot_app)

@app.route('/')
def index():
    return """
    <html>
    <head>
        <title>Telegram Bot Server</title>
        <link rel="stylesheet" href="https://cdn.replit.com/agent/bootstrap-agent-dark-theme.min.css">
    </head>
    <body>
        <div class="container mt-5">
            <div class="card">
                <div class="card-header">
                    <h3>O'quv Davomat Bot Server</h3>
                </div>
                <div class="card-body">
                    <h5 class="card-title">Bot holati</h5>
                    <p class="card-text">Telegram bot serveri ishlayapti. Iltimos, Telegram orqali botni ishlatishingiz mumkin.</p>
                    <hr>
                    <h5>Ma'lumot:</h5>
                    <ul>
                        <li><strong>Bot:</strong> Telegram ichida @oquv_davomat_bot (yoki manzilni botdan tekshiring)</li>
                        <li><strong>Buyruqlar:</strong>
                            <ul>
                                <li><code>/start</code> - botni boshlash va asosiy menyu</li>
                                <li><code>/davomat</code> - o'quvchining darsga kelganini belgilash</li>
                                <li><code>/royxat</code> - yangi o'quvchi ma'lumotlarini kiritish</li>
                                <li><code>/tolov</code> - to'lov ma'lumotlarini kiritish</li>
                                <li><code>/hisobot</code> - o'quvchilar bo'yicha hisobot olish</li>
                            </ul>
                        </li>
                    </ul>
                </div>
                <div class="card-footer text-muted">
                    Davomat ma'lumotlari Google Sheets'ga saqlanadi
                </div>
            </div>
        </div>
    </body>
    </html>
    """

@app.route('/webhook', methods=['POST'])
async def webhook():
    """Handle incoming webhook updates from Telegram"""
    try:
        update = Update.de_json(request.get_json(force=True), bot_app.bot)
        await bot_app.process_update(update)
        return jsonify({"status": "ok"})
    except Exception as e:
        logging.error(f"Error processing update: {e}")
        return jsonify({"status": "error", "message": str(e)})

if __name__ == '__main__':
    # Get port from environment variable or use 5000 as default
    port = int(os.environ.get('PORT', 5000))
    app.run(host='0.0.0.0', port=port)
